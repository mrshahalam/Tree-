package com.codewithshah;

import java.util.Arrays;
import java.util.Stack;
class Node
{
     int data;
     Node left;
     Node right;
     Node(int d)
     {
         data=d;
         left=right=null;
     }
}
class Main
{
    static Node root;
    boolean isbalance(Node node)
    {
        if (node==null)
            return true;
        int lh = height(node.left);
        int rh = height(node.right);

        if(Math.abs(lh-rh)<=1 && isbalance(node.left) && isbalance(node.right))
           return true;
        return false;
    }

    int height(Node root)
    {
        if (root==null)
            return 0;
        return (1+Math.max(height(root.left),height(root.right)));
    }


        public static void main (String[] args){
          Main tree = new Main();
          tree.root = new Node(12);
          tree.root.left = new Node(10);
          tree.root.right = new Node(30);
          tree.root.left.left = new Node(4);
          tree.root.left.right = new Node(5);
          tree.root.right.left = new Node(25);
          tree.root.right.right = new Node(40);
          tree.root.right.right.right = new Node(34);
          tree.root.right.right.right.right = new Node(45);

          if(tree.isbalance(root))
              System.out.print("Tree is balance Tree");
          else
              System.out.print("Tree is not balanced ");
          






    }
}
