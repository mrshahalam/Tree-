package com.codewithshah;

//-----------------------------------Lowest Common Ancestor in a Binary Tree-----------------------------
class Node
{
     int data;
     Node left;
     Node right;
     Node(int d)
     {
         data=d;
         left=right=null;
     }
}
class Main
{
    static Node root=null;

    Node findLCA(Node node , int a, int b)
    {
        if(node==null)
            return null;
        if(node.data==a || node.data==b)
            return node;
        Node left_lca = findLCA(node.left,a,b);
        Node right_lca = findLCA(node.right,a,b);

        if(left_lca!=null && right_lca!=null)
            return node;
        return (left_lca!=null)?left_lca:right_lca;
    }
        public static void main (String[] args){
          Main tree = new Main();
          tree.root = new Node(12);
          tree.root.left = new Node(10);
          tree.root.right = new Node(30);
          tree.root.left.left = new Node(4);
          tree.root.left.right = new Node(5);
          tree.root.right.left = new Node(25);
          tree.root.right.right = new Node(40);
          tree.root.right.right.right = new Node(34);
          tree.root.right.right.right.right = new Node(45);

          System.out.print("The LCA of (25,45) = "+tree.findLCA(root,25,45).data);
          System.out.print("\nThe LCA of (5,45) = "+tree.findLCA(root,5,45).data);
          System.out.print("\nThe LCA of (45,34) = "+tree.findLCA(root,34,45).data);
    }
}
//-----------------------by SHAH ALAM...
