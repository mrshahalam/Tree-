package com.codewithshah;
//----------------------------------Binary Tree to Doubly Linked List----------------------------
import java.util.Stack;
class Node
{
    int data;
    Node left = null, right = null;

    Node(int d)
    {
        data = d;
    }
}
class Main
{
    Node root;
    Node head;
    static Node prev = null;
    public void convert(Node root)
    {
        if (root==null)
            return;
        convert(root.left);
        if (prev==null)
            head = root;
        else
        {
            root.left =prev;
            prev.right = root;
        }
        prev = root;
        convert(root.right);
    }
    void print(Node node)
    {
        while (node != null)
        {
            System.out.print(node.data + " ");
            node = node.right;
        }
    }
    public static void main(String[] args)
    {
               Main tree = new Main();
               tree.root = new Node(1);
               tree.root.left = new Node(2);
               tree.root.left.left = new Node(3);
               tree.root.left.right = new Node(4);
               tree.root.right = new Node(5);
               tree.root.right.right = new Node(6);
               tree.root.right.left = new Node(7);
               tree.convert(tree.root);
               tree.print(tree.head);
    }
}
//-----------------------------BY SHAH ALAM
