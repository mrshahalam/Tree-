package test;
class Node 
{ 
	int data;
	Node left;
	Node right;
	public Node(int d)
	{
		data = d;
		left = right =null;
	}
} 

class demo 
{ 
	Node root;
	 demo()
	 {
		 root=null;
	 }
	 
	 public void preorder(Node node)
	 {
		 if(node==null)
		   return;
		 System.out.print(" "+node.data);
		 preorder(node.left);
		 preorder(node.right);
		 
	 }
	 public void inorder(Node node)
	 {
		 if(node==null)
			   return;
		 inorder(node.left);
		 System.out.print(" "+node.data );
		 inorder(node.right);
		 
	 }
	public void postorder(Node node)
	{
		 if(node==null)
			   return;
		postorder(node.left);
		postorder(node.right);
		System.out.print(" "+node.data);
	}
	void printinorder()
	{
		inorder(root);
	}
	void printpreorder()
	{
		preorder(root);
	}
	void printpostorder()
	{
		postorder(root);
	}
	public static void main(String[] args) 
	{ 
		demo tree = new demo(); 
		 tree.root = new Node(1);
		 tree.root.left = new Node(2);
		 tree.root.left.left = new Node(4);
		 tree.root.left.right = new Node(5);
		 
		 tree.root.right = new Node(3);
		 tree.root.right.left = new Node(6);
		 tree.root.right.right = new Node(7);
		 
		 System.out.print("Preorder Traversing of the tree \n");
		 tree.printpreorder();
		 System.out.print("\nInorder Traversing of the tree \n");
		 tree.printinorder();
		 System.out.print("\nPostorder Traversng of the tree \n");
		 tree.printpostorder();
		
	} 
} 
