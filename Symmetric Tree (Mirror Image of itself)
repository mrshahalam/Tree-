package com.codewithshah;
//-----------------------------------Symmetric Tree (Mirror Image of itself)-----------------------------
class Node
{
    int data;
    Node left;
    Node right;
    Node(int d)
    {
        data=d;
        left=right=null;
    }
}
public class Main {

     Node root;
     Main()
     {
         root=null;
     }

     boolean ismirror(Node node ,  Node node2)
     {
         if (node == null && node2==null)
             return true;

         if (node!=null && node2!=null && node.data == node2.data)
             return (ismirror(node.left , node2.left) && ismirror(node.right , node2.right));
         return false;
     }

     boolean call(Node root)
     {
         return ismirror(root,root);
     }
    public static void main(String[] args) {
	// write your code here
        Main tree = new Main();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(2);
        tree.root.left.left = new Node(3);
        tree.root.left.right = new Node(4);
        tree.root.right.left = new Node(87);
        tree.root.right.right = new Node(300);
        //----------------------Second tree----------

       boolean ot=tree.call(tree.root);
       if (ot==true)
           System.out.print("true");
       else
           System.out.print("false");


    }
}
